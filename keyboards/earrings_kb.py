from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

for_whom_mapping = {
    "gender_male": "–ú—É–∂—Å–∫–∏–µ",
    "gender_female": "–ñ–µ–Ω—Å–∫–∏–µ",
    "gender_unisex": "–£–Ω–∏—Å–µ–∫—Å",
}

condition_mapping = {
    "condition_new": "–ù–æ–≤—ã–µ",
    "condition_like_new": "–ö–∞–∫ –Ω–æ–≤—ã–µ",
    "condition_used": "–ë/–£",
}

def create_filter_keyboard_earrings(user_filters):
    min_price = user_filters.get('filter_price', {}).get('min_price')
    max_price = user_filters.get('filter_price', {}).get('max_price')
    price_text = f"{min_price}$-{max_price}$" if min_price is not None or max_price is not None else "–¶–µ–Ω–∞"

    gender = for_whom_mapping.get(user_filters.get('filter_gender', {}).get('gender', ''))
    gender_text = gender if gender else '–ü–æ–ª'

    condition = condition_mapping.get(user_filters.get('filter_condition', {}).get('condition', ''))
    condition_text = condition if condition else '–°–æ—Å—Ç–æ—è–Ω–∏–µ'

    brand = user_filters.get('filter_brand', {}).get('brand')
    brand_text = f"{brand}" if brand else "–ë—Ä–µ–Ω–¥"

    keyboard = InlineKeyboardMarkup(row_width=2)

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ "–¶–µ–Ω–∞", "–ë—Ä–µ–Ω–¥", "–°–æ—Å—Ç–æ—è–Ω–∏–µ", "–ü–æ–ª"
    keyboard.add(
        InlineKeyboardButton(f"{price_text}", callback_data="filter_price_earrings"),
        InlineKeyboardButton(f"{brand_text}", callback_data="filter_brand_earrings"),
        InlineKeyboardButton(f"{condition_text}", callback_data="filter_condition_earrings"),
        InlineKeyboardButton(f"{gender_text}", callback_data="filter_gender_earrings")
    )

    # –ö–Ω–æ–ø–∫–∞ "–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã"
    reset_button = InlineKeyboardButton("–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", callback_data="reset_filters_earrings")
    keyboard.add(reset_button)

    keyboard.add(InlineKeyboardButton("–ü–æ–∏—Å–∫üîé", switch_inline_query_current_chat="earrings"))

    return keyboard